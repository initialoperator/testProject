Compiled from "NormalClass.java"
public class com.chrystian.concurrent.NormalClass {
  int sum;

  final java.util.concurrent.atomic.AtomicInteger count;

  volatile java.lang.Integer count2;

  public com.chrystian.concurrent.NormalClass();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field sum:I
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_0
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: iconst_0
      23: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: putfield      #7                  // Field count2:Ljava/lang/Integer;
      29: return
    LineNumberTable:
      line 10: 0
      line 12: 4
      line 14: 9
      line 16: 21

  public void getCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return
    LineNumberTable:
      line 20: 0
      line 22: 8

  public void reentrantCount();
    Code:
       0: new           #9                  // class java/util/concurrent/locks/ReentrantLock
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       7: astore_1
       8: aload_1
       9: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
      14: pop
      15: aload_0
      16: getfield      #7                  // Field count2:Ljava/lang/Integer;
      19: astore_2
      20: aload_0
      21: aload_0
      22: getfield      #7                  // Field count2:Ljava/lang/Integer;
      25: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      28: iconst_1
      29: iadd
      30: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: dup_x1
      34: putfield      #7                  // Field count2:Ljava/lang/Integer;
      37: astore_3
      38: aload_2
      39: pop
      40: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
      43: aload_0
      44: getfield      #7                  // Field count2:Ljava/lang/Integer;
      47: invokevirtual #14                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      50: aload_1
      51: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      56: return
    LineNumberTable:
      line 25: 0
      line 26: 8
      line 27: 15
      line 28: 40
      line 29: 50
      line 30: 56

  public int getSum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sum:I
       4: ireturn
    LineNumberTable:
      line 33: 0

  public void setSum(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field sum:I
       5: return
    LineNumberTable:
      line 37: 0
      line 38: 5

  public void calculate(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getSum:()I
       5: iload_1
       6: iadd
       7: invokevirtual #17                 // Method setSum:(I)V
      10: return
    LineNumberTable:
      line 41: 0
      line 42: 10

  public synchronized void calculate2();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getSum:()I
       5: iconst_1
       6: iadd
       7: invokevirtual #17                 // Method setSum:(I)V
      10: return
    LineNumberTable:
      line 45: 0
      line 46: 10

  public void blockingMethod();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      10: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      13: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      16: aload_0
      17: iconst_2
      18: invokevirtual #21                 // Method calculate:(I)V
      21: ldc2_w        #22                 // long 1000l
      24: invokestatic  #24                 // Method java/lang/Thread.sleep:(J)V
      27: goto          31
      30: astore_2
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_1
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           4    27    30   Class java/lang/Exception
           4    33    36   any
          36    39    36   any
    LineNumberTable:
      line 49: 0
      line 52: 4
      line 53: 16
      line 54: 21
      line 57: 27
      line 55: 30
      line 58: 31
      line 59: 41

  public void nonBlockingMethod();
    Code:
       0: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #26                 // String print print
       5: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
      11: aload_0
      12: invokevirtual #16                 // Method getSum:()I
      15: invokevirtual #27                 // Method java/io/PrintStream.println:(I)V
      18: aload_0
      19: bipush        100
      21: invokevirtual #21                 // Method calculate:(I)V
      24: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
      27: aload_0
      28: invokevirtual #16                 // Method getSum:()I
      31: invokevirtual #27                 // Method java/io/PrintStream.println:(I)V
      34: return
    LineNumberTable:
      line 62: 0
      line 63: 8
      line 64: 18
      line 65: 24
      line 66: 34

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: new           #28                 // class com/chrystian/concurrent/NormalClass
       3: dup
       4: invokespecial #29                 // Method "<init>":()V
       7: astore_1
       8: new           #30                 // class java/lang/Thread
      11: dup
      12: aload_1
      13: invokedynamic #31,  0             // InvokeDynamic #0:run:(Lcom/chrystian/concurrent/NormalClass;)Ljava/lang/Runnable;
      18: invokespecial #32                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      21: astore_2
      22: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
      25: aload_2
      26: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      29: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      32: new           #30                 // class java/lang/Thread
      35: dup
      36: aload_1
      37: dup
      38: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: invokedynamic #34,  0             // InvokeDynamic #1:run:(Lcom/chrystian/concurrent/NormalClass;)Ljava/lang/Runnable;
      47: invokespecial #32                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      50: astore_3
      51: getstatic     #13                 // Field java/lang/System.out:Ljava/io/PrintStream;
      54: aload_3
      55: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      58: invokevirtual #20                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      61: new           #30                 // class java/lang/Thread
      64: dup
      65: aload_1
      66: invokedynamic #35,  0             // InvokeDynamic #2:run:(Lcom/chrystian/concurrent/NormalClass;)Ljava/lang/Runnable;
      71: invokespecial #32                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      74: astore        4
      76: new           #30                 // class java/lang/Thread
      79: dup
      80: aload_1
      81: invokedynamic #36,  0             // InvokeDynamic #3:run:(Lcom/chrystian/concurrent/NormalClass;)Ljava/lang/Runnable;
      86: invokespecial #32                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      89: astore        5
      91: new           #30                 // class java/lang/Thread
      94: dup
      95: aload_1
      96: invokedynamic #37,  0             // InvokeDynamic #4:run:(Lcom/chrystian/concurrent/NormalClass;)Ljava/lang/Runnable;
     101: invokespecial #32                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     104: astore        6
     106: aload         4
     108: invokevirtual #38                 // Method java/lang/Thread.start:()V
     111: aload         5
     113: invokevirtual #38                 // Method java/lang/Thread.start:()V
     116: aload         6
     118: invokevirtual #38                 // Method java/lang/Thread.start:()V
     121: return
    LineNumberTable:
      line 91: 0
      line 92: 8
      line 95: 22
      line 96: 32
      line 97: 51
      line 102: 61
      line 105: 76
      line 108: 91
      line 111: 106
      line 112: 111
      line 113: 116
      line 114: 121
}
